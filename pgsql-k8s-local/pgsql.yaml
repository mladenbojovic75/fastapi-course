# apiVersion: v1
# kind: Secret
# metadata:
#   name: postgres-secret-config
# type: Opaque
# data:
#   password: UG9zdGdyZXMxMjMK
# ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    #path: "/mnt/pgsql"
    path: "/home/mladen/rancher-desktop/pgsql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
       storage: 50Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgadmin-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    #path: "/mnt/pgadmin"
    path: "/home/mladen/rancher-desktop/pgadmin"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
       storage: 50Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
data:
  servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 5432,
           "Username": "postgres",
           "Host": "postgres",
           "SSLMode": "prefer",
           "MaintenanceDB": "postgres"
         }
       }
   }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
       - name: postgres-pv-storage
         persistentVolumeClaim:
           claimName: postgres-pv-claim
      containers:
        - name: postgres
          image: postgres:12
          imagePullPolicy: IfNotPresent
          ports:
           - containerPort: 5432
             hostPort: 5432
          securityContext:
            #allowPrivilegeEscalation: true
            runAsUser: 1000
            runAsGroup: 1000
            #fsGroup: 1000
          env:
           - name: POSTGRES_PASSWORD
             value: Postgres123
            #  valueFrom:
            #    secretKeyRef:
            #      name: postgres-secret-config
            #      key: password
           - name: PGDATA  
             value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-storage
              readOnly: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      volumes:
          - name: pgadmin-config
            configMap:
              name: pgadmin-config
          - name: pgadmin-data
            persistentVolumeClaim:
              claimName: pgadmin-pv-claim
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:latest
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          securityContext:
           runAsUser: 0
           runAsGroup: 0
          ports:
           - containerPort: 8080
             hostPort: 8080
          env:
           - name: PGADMIN_DEFAULT_PASSWORD
             value: Postgres123
             #valueFrom:
             #  secretKeyRef:
             #    name: postgres-secret-config
             #    key: password
           - name: PGADMIN_DEFAULT_EMAIL  
             value: brokenmojo@gmail.com
           - name: PGADMIN_LISTEN_PORT
             value: "8080"     
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - name: pgsql
     port: 5432
  selector:
    app: postgres
            